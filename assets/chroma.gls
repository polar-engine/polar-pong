@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_diffuse
@out rgba8 color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = a_vertex * 0.5 + 0.5;
}

@shader fragment

void main() {
	vec2 texcoord = v_vertex;

	// TODO: use aspectCorrect or u_resolution for pixel-correct aberration
	//float aspect = u_resolution.x / u_resolution.y;
	//vec2 aspectCorrect = vec2(1.0, aspect);

	float amount = 0.005;

	vec3 color;
	color.r = texture(u_diffuse, vec2(texcoord.x + amount, texcoord.y)).r;
	color.g = texture(u_diffuse, texcoord).g;
	color.b = texture(u_diffuse, vec2(texcoord.x - amount, texcoord.y)).b;

	color *= (1.0 - amount * 0.5);

	o_color = vec4(color, 1.0);
}
